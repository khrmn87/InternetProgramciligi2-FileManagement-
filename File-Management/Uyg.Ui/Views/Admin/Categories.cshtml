@{
    ViewData["Title"] = "Categories";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<div class="row">
    <div class="col-md-8" id="divList">
        <div class="card">
            <div class="card-header">
                <h3>Kategoriler</h3>
            </div>
            <div class="card-body">
                <table class="table table-striped" id="tbCategoryList">
                    <thead class="table-dark">
                        <tr>
                            <th>Adı</th>
                            <th>Kayıt Tarihi</th>
                            <th>Düzenleme Tarihi</th>
                            <th>Durumu</th>
                            <th>İşlemler</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
            <div class="card-footer"></div>
        </div>
    </div>
    <div class="col-md-4" id="divAddUpdate">
        <div class="card">
            <div class="card-header"><h4>Kategori Ekle - Güncelle</h4></div>
            <div class="card-body">
                <div class="mb-3">
                    <label class="form-label">Kategori Adı</label>
                    <input type="hidden" class="form-control" id="txtId" />
                    <input type="text" class="form-control" id="txtName" placeholder="Kategori adını giriniz..." />
                </div>
                <div class="mb-3">
                    <div class="form-check">
                        <input type="checkbox" class="form-check-input" id="cbIsActive" />
                        <label class="form-check-label" for="cbIsActive">Aktif</label>
                    </div>
                </div>
                <div class="mb-3">
                    <div class="btn-group" role="group">
                        <button class="btn btn-primary btn-sm" title="Kaydet" id="btnSave">
                            <i class="fa fa-save"></i> Kaydet
                        </button>
                        <button class="btn btn-secondary btn-sm" title="Vazgeç" id="btnCancel" style="display:none;">
                            <i class="fa fa-arrow-left"></i> Vazgeç
                        </button>
                        <button class="btn btn-warning btn-sm" title="Düzenle" id="btnEdit" style="display:none;">
                            <i class="fa fa-edit"></i> Güncelle
                        </button>
                        <button class="btn btn-danger btn-sm" title="Sil" id="btnDelete" style="display:none;">
                            <i class="fa fa-trash"></i> Sil
                        </button>
                    </div>
                </div>
                <div class="alert mt-3" id="divResult" style="display:none;"></div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function(){
            console.log("Kategoriler sayfası yüklendi");

            var apiBaseUrl="@ViewBag.ApiBaseURL";
            console.log("API Base URL:", apiBaseUrl);

            if(localStorage.getItem("token")=="" || localStorage.getItem("token")==null){
                console.log("Token bulunamadı, login'e yönlendiriliyor");
                location.href="/Login";
                return false;
            }
            var token=localStorage.getItem("token");
            console.log("Token bulundu");

            // Token'dan kullanıcı rollerini çıkar
            var userRoles = getUserRoles();
            console.log("Kullanıcı rolleri:", userRoles);

            GetCategoryList();

            // Token'dan kullanıcı rollerini çıkarma fonksiyonu
            function getUserRoles() {
                try {
                    var base64Url = token.split('.')[1];
                    var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');
                    var jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {
                        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);
                    }).join(''));

                    var payload = JSON.parse(jsonPayload);
                    var roles = payload["http://schemas.microsoft.com/ws/2008/06/identity/claims/role"] || [];

                    return Array.isArray(roles) ? roles : [roles];
                } catch(e) {
                    console.log("Token decode hatası:", e);
                    return [];
                }
            }

            // Tarih formatlama fonksiyonu
            function FormatDate(dateString) {
                if (!dateString) return '';
                try {
                    var date = new Date(dateString);
                    var day = ("0" + date.getDate()).slice(-2);
                    var month = ("0" + (date.getMonth() + 1)).slice(-2);
                    var year = date.getFullYear();
                    var hours = ("0" + date.getHours()).slice(-2);
                    var minutes = ("0" + date.getMinutes()).slice(-2);

                    return day + "." + month + "." + year + " " + hours + ":" + minutes;
                } catch(e) {
                    return dateString;
                }
            }

            function GetCategoryList(){
                console.log("GetCategoryList çağrıldı");

                $.ajax({
                    url: apiBaseUrl + "/Category",
                    type: "GET",
                    headers: {
                        "Authorization": "Bearer " + token
                    },
                    success: function (d) {
                        console.log("Kategori listesi alındı:", d);
                        CategoryToTable(d);
                    },
                    error: function (xhr, status, error) {
                        console.log("Kategori listesi hatası:", error);
                        showMessage("Kategori listesi alınamadı: " + error, "danger");
                    }
                });
            }

            function CategoryToTable(data){
                console.log("CategoryToTable çağrıldı, data:", data);

                if (!data || data.length === 0) {
                    $("#tbCategoryList tbody").html('<tr><td colspan="5" class="text-center">Henüz kategori eklenmemiş</td></tr>');
                    return;
                }

                $("#tbCategoryList tbody").empty();
                var row="";
                $.each(data,function(i,item){
                    var bg = item.isActive == true ? 'bg-success': 'bg-danger';
                    var status = item.isActive == true ? 'Aktif': 'Pasif';

                    row+="<tr>";
                    row+="<td><i class='fa fa-folder me-2'></i>"+item.name+"</td>";
                    row+="<td>"+FormatDate(item.created)+"</td>";
                    row+="<td>"+FormatDate(item.updated)+"</td>";
                    row+="<td><span class='text-white badge " + bg +"'>"+status+"</span></td>";
                    row+='<td>';
                    row+='<div class="btn-group" role="group">';
                    row+='<a class="btn btn-info btn-sm" href="/Files?categoryId='+item.id+'" title="Dosyalar"><i class="fa fa-file"></i></a>';
                    row+='<button class="btn btn-warning btn-sm btnEdit" data-id="'+item.id+'" title="Düzenle"><i class="fa fa-edit"></i></button>';
                    row+='<button class="btn btn-danger btn-sm btnDeleteCategory" data-id="'+item.id+'" title="Sil"><i class="fa fa-trash"></i></button>';
                    row+='</div>';
                    row+='</td>';
                    row+="</tr>";
                });
                $("#tbCategoryList tbody").append(row);

                console.log("Tablo güncellendi, " + data.length + " kategori eklendi");

                // Admin kontrolü kaldırıldı - herkes kategori yönetebilir
                // Tüm butonlar herkese açık
            }

            function showMessage(message, type) {
                $("#divResult")
                    .show()
                    .removeClass()
                    .addClass("alert alert-" + type + " mt-3")
                    .html(message)
                    .delay(2000)
                    .fadeOut(3000);
            }

            function clearForm() {
                $("#txtName").val("");
                $("#txtId").val("");
                $("#cbIsActive").prop("checked", false);
                $("#divResult").hide().html("");
            }

            $("#btnSave").click(function(){
                console.log("Kategori kaydetme başlatıldı");

                if($("#txtName").val()=="" || $("#txtName").val()==null){
                    showMessage("Kategori Adı Giriniz!", "danger");
                    return false;
                }

                var name = $("#txtName").val();
                var isActive = $("#cbIsActive").is(":checked");
                var category = {
                    name: name,
                    IsActive: isActive
                };

                console.log("Kategori verisi:", category);

                $.ajax({
                    url: apiBaseUrl + "/Category",
                    type: "POST",
                    headers: {
                        "Authorization": "Bearer " + token
                    },
                    data: JSON.stringify(category),
                    contentType: "application/json",
                    success: function (d) {
                        console.log("Kategori kayıt yanıtı:", d);

                        if (!d) {
                            showMessage("Kategori başarıyla kaydedildi", "success");
                            GetCategoryList();
                            clearForm();
                            return;
                        }

                        if (d.status === true) {
                            showMessage(d.message || "Kategori başarıyla kaydedildi", "success");
                            GetCategoryList();
                            clearForm();
                        } else if (d.status === false) {
                            showMessage(d.message || "Kayıt işlemi başarısız", "danger");
                        } else {
                            showMessage("Kategori başarıyla kaydedildi", "success");
                            GetCategoryList();
                            clearForm();
                        }
                    },
                    error: function (xhr, status, error) {
                        console.log("Kategori kayıt hatası:", error);
                        showMessage("Kategori kaydedilemedi: " + error, "danger");
                    }
                });
            });

            $(document).on("click",".btnEdit",function(){
                var id=$(this).attr("data-id");
                console.log("Kategori düzenleme başlatıldı, ID:", id);

                $.ajax({
                    url: apiBaseUrl + "/Category/"+id,
                    type: "GET",
                    headers: {
                        "Authorization": "Bearer " + token
                    },
                    contentType: "application/json",
                    success: function (d) {
                        console.log("Kategori detay alındı:", d);
                        $("#btnSave").hide();
                        $("#btnCancel").show();
                        $("#btnEdit").show();
                        $("#btnDelete").show();
                        $("#txtId").val(id);
                        $("#txtName").val(d.name);
                        $("#cbIsActive").prop("checked", d.isActive);

                        // Scroll to form
                        $('html, body').animate({
                            scrollTop: $("#divAddUpdate").offset().top
                        }, 500);
                    },
                    error: function (xhr, status, error) {
                        console.log("Kategori detay hatası:", error);
                        showMessage("Kategori bilgileri alınamadı: " + error, "danger");
                    }
                });
            });

            $(document).on("click",".btnDeleteCategory",function(){
                if(!confirm("Bu kategoriyi silmek istediğinizden emin misiniz?")){
                    return;
                }

                var id=$(this).attr("data-id");
                console.log("Kategori silme başlatıldı, ID:", id);

                $.ajax({
                    url: apiBaseUrl + "/Category/"+id,
                    type: "DELETE",
                    headers: {
                        "Authorization": "Bearer " + token
                    },
                    contentType: "application/json",
                    success: function (d) {
                        console.log("Kategori silme yanıtı:", d);

                        if (!d) {
                            showMessage("Kategori başarıyla silindi", "success");
                            GetCategoryList();
                            return;
                        }

                        if (d.status === true) {
                            showMessage(d.message || "Kategori başarıyla silindi", "success");
                            GetCategoryList();
                        } else if (d.status === false) {
                            showMessage(d.message || "Silme işlemi başarısız", "danger");
                        } else {
                            showMessage("Kategori başarıyla silindi", "success");
                            GetCategoryList();
                        }
                    },
                    error: function (xhr, status, error) {
                        console.log("Kategori silme hatası:", error);
                        if (xhr.status === 204) {
                            showMessage("Kategori başarıyla silindi", "success");
                            GetCategoryList();
                        } else {
                            showMessage("Kategori silinemedi: " + error, "danger");
                        }
                    }
                });
            });

            $("#btnCancel").click(function(){
                $("#btnCancel").hide();
                $("#btnEdit").hide();
                $("#btnDelete").hide();
                $("#btnSave").show();
                clearForm();
            });

            $("#btnEdit").click(function(){
                console.log("Kategori güncelleme başlatıldı");

                if($("#txtName").val()=="" || $("#txtName").val()==null){
                    showMessage("Kategori Adı Giriniz!", "danger");
                    return false;
                }

                var id = $("#txtId").val();
                var name = $("#txtName").val();
                var isActive = $("#cbIsActive").is(":checked");
                var category = {
                    id: id,
                    name: name,
                    IsActive: isActive
                };

                console.log("Güncelleme verisi:", category);

                $.ajax({
                    url: apiBaseUrl + "/Category",
                    type: "PUT",
                    headers: {
                        "Authorization": "Bearer " + token
                    },
                    data: JSON.stringify(category),
                    contentType: "application/json",
                    success: function (d) {
                        console.log("Kategori güncelleme yanıtı:", d);

                        if (!d) {
                            showMessage("Kategori başarıyla güncellendi", "success");
                            GetCategoryList();
                            $("#btnCancel").click();
                            return;
                        }

                        if (d.status === true) {
                            showMessage(d.message || "Kategori başarıyla güncellendi", "success");
                            GetCategoryList();
                            $("#btnCancel").click();
                        } else if (d.status === false) {
                            showMessage(d.message || "Güncelleme işlemi başarısız", "danger");
                        } else {
                            showMessage("Kategori başarıyla güncellendi", "success");
                            GetCategoryList();
                            $("#btnCancel").click();
                        }
                    },
                    error: function (xhr, status, error) {
                        console.log("Kategori güncelleme hatası:", error);
                        if (xhr.status === 204) {
                            showMessage("Kategori başarıyla güncellendi", "success");
                            GetCategoryList();
                            $("#btnCancel").click();
                        } else {
                            showMessage("Kategori güncellenemedi: " + error, "danger");
                        }
                    }
                });
            });

            $("#btnDelete").click(function(){
                if(!confirm("Bu kategoriyi silmek istediğinizden emin misiniz?")){
                    return;
                }

                var id=$("#txtId").val();
                console.log("Form kategori silme başlatıldı, ID:", id);

                $.ajax({
                    url: apiBaseUrl + "/Category/"+id,
                    type: "DELETE",
                    headers: {
                        "Authorization": "Bearer " + token
                    },
                    contentType: "application/json",
                    success: function (d) {
                        console.log("Form kategori silme yanıtı:", d);

                        if (!d) {
                            showMessage("Kategori başarıyla silindi", "success");
                            GetCategoryList();
                            $("#btnCancel").click();
                            return;
                        }

                        if (d.status === true) {
                            showMessage(d.message || "Kategori başarıyla silindi", "success");
                            GetCategoryList();
                            $("#btnCancel").click();
                        } else if (d.status === false) {
                            showMessage(d.message || "Silme işlemi başarısız", "danger");
                        } else {
                            showMessage("Kategori başarıyla silindi", "success");
                            GetCategoryList();
                            $("#btnCancel").click();
                        }
                    },
                    error: function (xhr, status, error) {
                        console.log("Form kategori silme hatası:", error);
                        if (xhr.status === 204) {
                            showMessage("Kategori başarıyla silindi", "success");
                            GetCategoryList();
                            $("#btnCancel").click();
                        } else {
                            showMessage("Kategori silinemedi: " + error, "danger");
                        }
                    }
                });
            });
        });
    </script>
}