@{
    ViewData["Title"] = "Favori Dosyalar";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<!-- Sayfa Başlığı -->
<div class="row mb-4">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <div class="d-flex justify-content-between align-items-center">
                    <h4 class="mb-0">
                        <i class="fa fa-star text-warning me-2"></i>
                        Favori Dosyalarım
                    </h4>
                    <div>
                        <a href="/Files" class="btn btn-outline-primary btn-sm">
                        @* <a href="/Admin/Files" class="btn btn-outline-primary btn-sm"> *@
                            <i class="fa fa-arrow-left me-1"></i>Dosyalara Dön
                        </a>
                        <button type="button" class="btn btn-outline-danger btn-sm" id="btnClearAll">
                            <i class="fa fa-trash me-1"></i>Tümünü Temizle
                        </button>
                    </div>
                </div>
            </div>
            <div class="card-body">
                <p class="text-muted mb-0">
                    <i class="fa fa-info-circle me-1"></i>
                    Favorilere eklediğiniz dosyalar burada görüntülenir.
                </p>
            </div>
        </div>
    </div>
</div>

<!-- Favori Dosya Listesi -->
<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <div class="d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">Favori Dosya Listesi</h5>
                    <span class="badge bg-warning" id="starredFileCount">0 favori dosya</span>
                </div>
            </div>
            <div class="card-body">
                <!-- Loading Spinner -->
                <div id="loadingSpinner" class="text-center py-4">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Yükleniyor...</span>
                    </div>
                    <p class="mt-2 text-muted">Favori dosyalar yükleniyor...</p>
                </div>

                <!-- Favori Dosyalar Tablosu -->
                <div class="table-responsive" id="starredTableContainer" style="display: none;">
                    <table class="table table-striped table-hover" id="tbStarredFileList">
                        <thead class="table-warning">
                            <tr>
                                <th><i class="fa fa-file me-1"></i>Dosya Adı</th>
                                <th><i class="fa fa-user me-1"></i>Ekleyen</th>
                                <th><i class="fa fa-clock me-1"></i>Favorilere Eklenme</th>
                                <th><i class="fa fa-cog me-1"></i>İşlemler</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>

                <!-- Boş Durum Mesajı -->
                <div id="emptyState" style="display: none;">
                    <div class="text-center py-5">
                        <i class="fa fa-star-o fa-3x text-muted mb-3"></i>
                        <h5 class="text-muted">Henüz favori dosyanız yok</h5>
                        <p class="text-muted">Dosyalar sayfasından dosyaları favorilere ekleyebilirsiniz.</p>
                        <a href="/Files" class="btn btn-outline-primary btn-sm">
                            <i class="fa fa-folder me-1"></i>Dosyalara Git
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Sonuç Mesajları -->
<div class="alert mt-3" id="divResult" style="display:none;"></div>

@section Scripts {
    <script>
        $(document).ready(function(){
            console.log("Favori dosyalar sayfası yüklendi");

            var apiBaseUrl = "@ViewBag.ApiBaseURL";
            console.log("API Base URL:", apiBaseUrl);

            // Token kontrolü
            if(localStorage.getItem("token") == "" || localStorage.getItem("token") == null){
                console.log("Token bulunamadı, login'e yönlendiriliyor");
                location.href = "/Login";
                return false;
            }
            var token = localStorage.getItem("token");
            console.log("Token bulundu");

            // Kullanıcı ID'sini al
            var userId = getUserId();
            if (!userId) {
                showMessage("Kullanıcı bilgileri alınamadı", "danger");
                return;
            }

            console.log("User ID:", userId);

            // Favori dosyaları yükle
            GetStarredFiles();

            // Token'dan kullanıcı ID'sini çıkarma fonksiyonu
            function getUserId() {
                try {
                    var base64Url = token.split('.')[1];
                    var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');
                    var jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {
                        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);
                    }).join(''));

                    var payload = JSON.parse(jsonPayload);
                    return payload["http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier"] ||
                           payload["sub"] ||
                           payload["nameid"];
                } catch(e) {
                    console.log("User ID decode hatası:", e);
                    return null;
                }
            }

            // Favori dosyaları getir
            function GetStarredFiles() {
                console.log("Favori dosyalar getiriliyor...");
                console.log("API URL:", apiBaseUrl + "/Starred/get-starred-files/" + userId);
                console.log("User ID:", userId);
                $("#loadingSpinner").show();
                $("#starredTableContainer").hide();
                $("#emptyState").hide();

                $.ajax({
                    url: apiBaseUrl + "/Starred/get-starred-files/" + userId,
                    type: "GET",
                    headers: {
                        "Authorization": "Bearer " + token
                    },
                    success: function (data) {
                        console.log("Favori dosyalar başarıyla alındı:", data);
                        $("#loadingSpinner").hide();

                        if (!data || data.length === 0) {
                            $("#emptyState").show();
                            $("#starredFileCount").text("0 favori dosya");
                        } else {
                            StarredFilesToTable(data);
                            $("#starredTableContainer").show();
                            $("#starredFileCount").text(data.length + " favori dosya");
                        }
                    },
                    error: function (xhr, status, error) {
                        console.log("Favori dosyalar HATASI:");
                        console.log("Status:", status);
                        console.log("Error:", error);
                        console.log("Response:", xhr.responseText);
                        console.log("Status Code:", xhr.status);

                        $("#loadingSpinner").hide();

                        if (xhr.status === 404) {
                            $("#emptyState").show();
                            $("#starredFileCount").text("0 favori dosya");
                        } else {
                            showMessage("Favori dosyalar alınamadı: " + error, "danger");
                            $("#emptyState").show();
                        }
                    }
                });
            }

            // Favori dosyaları tabloya doldur
            function StarredFilesToTable(data) {
                console.log("Favori dosyalar tabloya doldruluyor:", data);

                $("#tbStarredFileList tbody").empty();
                var row = "";

                $.each(data, function(i, item) {
                    console.log("Favori dosya işleniyor:", item);

                    var fileName = item.fileName || "Bilinmeyen Dosya";
                    var username = item.username || "Bilinmeyen Kullanıcı";
                    var starredDate = FormatDate(item.starredOn);

                    row += "<tr>";
                    row += "<td>";
                    row += "<div class='d-flex align-items-center'>";
                    row += "<i class='fa fa-star text-warning me-2'></i>";
                    row += "<div>";
                    row += "<strong>" + fileName + "</strong>";
                    row += "<br><small class='text-muted'>Dosya ID: " + item.fileId + "</small>";
                    row += "</div>";
                    row += "</div>";
                    row += "</td>";
                    row += "<td>";
                    row += "<span class='badge bg-info'>" + username + "</span>";
                    row += "</td>";
                    row += "<td>" + starredDate + "</td>";
                    row += "<td>";
                    row += "<div class='btn-group' role='group'>";
                    row += "<button class='btn btn-success btn-sm btnDownloadStarred' data-file-id='" + item.fileId + "' title='İndir'>";
                    row += "<i class='fa fa-download'></i>";
                    row += "</button>";
                    row += "<button class='btn btn-primary btn-sm btnViewFileDetails' data-file-id='" + item.fileId + "' title='Dosya Detayları'>";
                    row += "<i class='fa fa-info'></i>";
                    row += "</button>";
                    row += "<button class='btn btn-danger btn-sm btnRemoveFromFavorites' data-file-id='" + item.fileId + "' title='Favorilerden Çıkar'>";
                    row += "<i class='fa fa-star'></i>";
                    row += "</button>";
                    row += "</div>";
                    row += "</td>";
                    row += "</tr>";
                });

                $("#tbStarredFileList tbody").html(row);
                console.log("Tablo güncellendi, " + data.length + " favori dosya eklendi");
            }

            // Tarih formatlama
            function FormatDate(dateString) {
                if (!dateString) return '';
                try {
                    var date = new Date(dateString);
                    var day = ("0" + date.getDate()).slice(-2);
                    var month = ("0" + (date.getMonth() + 1)).slice(-2);
                    var year = date.getFullYear();
                    var hours = ("0" + date.getHours()).slice(-2);
                    var minutes = ("0" + date.getMinutes()).slice(-2);

                    return day + "." + month + "." + year + " " + hours + ":" + minutes;
                } catch(e) {
                    return dateString;
                }
            }

            // Favorilerden çıkar
            $(document).on("click", ".btnRemoveFromFavorites", function() {
                var fileId = $(this).attr("data-file-id");
                var button = $(this);

                if (!confirm("Bu dosyayı favorilerden çıkarmak istediğinizden emin misiniz?")) {
                    return;
                }

                console.log("Favorilerden çıkarma işlemi başlatıldı, FileID:", fileId);

                $.ajax({
                    url: apiBaseUrl + "/Starred/unstar/" + fileId + "/" + userId,
                    type: "DELETE",
                    headers: {
                        "Authorization": "Bearer " + token
                    },
                    success: function (d) {
                        console.log("Favorilerden çıkarma yanıtı:", d);
                        showMessage("Dosya favorilerden çıkarıldı", "success");

                        // Satırı tablodan kaldır
                        button.closest('tr').fadeOut(500, function() {
                            $(this).remove();

                            // Eğer tablo boşaldıysa boş durum göster
                            if ($("#tbStarredFileList tbody tr").length === 0) {
                                $("#starredTableContainer").hide();
                                $("#emptyState").show();
                                $("#starredFileCount").text("0 favori dosya");
                            } else {
                                var remainingCount = $("#tbStarredFileList tbody tr").length;
                                $("#starredFileCount").text(remainingCount + " favori dosya");
                            }
                        });
                    },
                    error: function (xhr, status, error) {
                        console.log("Favorilerden çıkarma hatası:", error);
                        console.log("Response:", xhr.responseText);
                        console.log("Status Code:", xhr.status);

                        if (xhr.status === 404) {
                            showMessage("Bu dosya zaten favorilerinizde değil", "info");
                            // Yine de satırı kaldır
                            button.closest('tr').fadeOut(500, function() {
                                $(this).remove();
                            });
                        } else {
                            showMessage("Favorilerden çıkarılamadı: " + error, "danger");
                        }
                    }
                });
            });

            // Dosya indirme
            $(document).on("click", ".btnDownloadStarred", function() {
                var fileId = $(this).attr("data-file-id");
                console.log("Favori dosya indirme başlatıldı, FileID:", fileId);

                $.ajax({
                    url: apiBaseUrl + "/FileModal/download/" + fileId,
                    type: "GET",
                    headers: {
                        "Authorization": "Bearer " + token
                    },
                    xhrFields: {
                        responseType: 'blob'
                    },
                    success: function(data, status, xhr) {
                        var filename = "";
                        var disposition = xhr.getResponseHeader('Content-Disposition');
                        if (disposition && disposition.indexOf('attachment') !== -1) {
                            var filenameRegex = /filename[^;=\n]*=((['"]).*?\2|[^;\n]*)/;
                            var matches = filenameRegex.exec(disposition);
                            if (matches != null && matches[1]) filename = matches[1].replace(/['"]/g, '');
                        }

                        var blob = new Blob([data]);
                        var link = document.createElement('a');
                        link.href = window.URL.createObjectURL(blob);
                        link.download = filename || 'download';
                        link.click();
                        window.URL.revokeObjectURL(link.href);

                        showMessage("Dosya indirildi", "success");
                    },
                    error: function(xhr) {
                        console.log("Dosya indirme hatası:", xhr);
                        showMessage("Dosya indirilemedi: " + (xhr.status === 403 ? "Yetki hatası" : "Bilinmeyen hata"), "danger");
                    }
                });
            });

            // Dosya detaylarını görüntüle
            $(document).on("click", ".btnViewFileDetails", function() {
                var fileId = $(this).attr("data-file-id");
                console.log("Dosya detayları görüntüleniyor, FileID:", fileId);

                $.ajax({
                    url: apiBaseUrl + "/FileModal/" + fileId,
                    type: "GET",
                    headers: {
                        "Authorization": "Bearer " + token
                    },
                    success: function (fileData) {
                        console.log("Dosya detayları alındı:", fileData);

                        var fileSize = formatFileSize(fileData.fileSize || 0);
                        var categoryName = fileData.category ? fileData.category.name : "Kategori Yok";
                        var uploadDate = FormatDate(fileData.uploadOn);

                        var detailsHtml = "<div class='row'>";
                        detailsHtml += "<div class='col-md-6'>";
                        detailsHtml += "<strong>Dosya Adı:</strong> " + fileData.fileName + fileData.extension + "<br>";
                        detailsHtml += "<strong>Boyut:</strong> " + fileSize + "<br>";
                        detailsHtml += "<strong>Kategori:</strong> " + categoryName + "<br>";
                        detailsHtml += "</div>";
                        detailsHtml += "<div class='col-md-6'>";
                        detailsHtml += "<strong>Yükleyen:</strong> " + fileData.uploadedBy + "<br>";
                        detailsHtml += "<strong>Yüklenme Tarihi:</strong> " + uploadDate + "<br>";
                        detailsHtml += "<strong>Açıklama:</strong> " + (fileData.description || "Açıklama yok") + "<br>";
                        detailsHtml += "</div>";
                        detailsHtml += "</div>";

                        showMessage(detailsHtml, "info");
                    },
                    error: function(xhr, status, error) {
                        console.log("Dosya detayları alınamadı:", error);
                        showMessage("Dosya detayları alınamadı", "danger");
                    }
                });
            });

            // Tüm favorileri temizle
            $("#btnClearAll").click(function() {
                if (!confirm("Tüm favori dosyalarınızı temizlemek istediğinizden emin misiniz?\nBu işlem geri alınamaz!")) {
                    return;
                }

                console.log("Tüm favoriler temizleniyor...");

                // Tüm favori dosyaları al ve tek tek sil
                $.ajax({
                    url: apiBaseUrl + "/Starred/get-starred-files/" + userId,
                    type: "GET",
                    headers: {
                        "Authorization": "Bearer " + token
                    },
                    success: function (data) {
                        if (!data || data.length === 0) {
                            showMessage("Temizlenecek favori dosya bulunamadı", "info");
                            return;
                        }

                        var deletePromises = [];

                        $.each(data, function(i, item) {
                            var deletePromise = $.ajax({
                                url: apiBaseUrl + "/Starred/unstar/" + item.fileId + "/" + userId,
                                type: "DELETE",
                                headers: {
                                    "Authorization": "Bearer " + token
                                }
                            });
                            deletePromises.push(deletePromise);
                        });

                        Promise.all(deletePromises)
                            .then(function() {
                                console.log("Tüm favoriler temizlendi");
                                showMessage("Tüm favori dosyalar temizlendi", "success");
                                $("#starredTableContainer").hide();
                                $("#emptyState").show();
                                $("#starredFileCount").text("0 favori dosya");
                            })
                            .catch(function(error) {
                                console.log("Bazı favoriler temizlenemedi:", error);
                                showMessage("Bazı favoriler temizlenemedi, sayfayı yenileyin", "warning");
                                GetStarredFiles(); // Sayfayı yenile
                            });
                    },
                    error: function(xhr, status, error) {
                        console.log("Favori dosyalar alınamadı:", error);
                        showMessage("Favoriler temizlenemedi", "danger");
                    }
                });
            });

            // Dosya boyutu formatlama
            function formatFileSize(bytes) {
                if (bytes === 0) return '0 Bytes';
                var k = 1024;
                var sizes = ['Bytes', 'KB', 'MB', 'GB'];
                var i = Math.floor(Math.log(bytes) / Math.log(k));
                return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
            }

            // Mesaj gösterme
            function showMessage(message, type) {
                $("#divResult")
                    .show()
                    .removeClass()
                    .addClass("alert alert-" + type + " mt-3")
                    .html(message);

                // Eğer success veya info mesajıysa otomatik kaybol
                if (type === "success" || type === "info") {
                    $("#divResult").delay(3000).fadeOut(2000);
                }
            }

            // Sayfa yenileme butonu
            $(document).on("click", "#btnRefresh", function() {
                GetStarredFiles();
            });
        });
    </script>
}