@{
    ViewData["Title"] = "Home Page";
}
<div class="container py-4">
    <div class="text-center mb-5">
        <h1 class="display-4 fw-bold text-primary">📁 Dosya Yönetim Portalı</h1>
        <p class="text-muted fs-5">Dosyalarınızı kolayca yönetin, paylaşın ve takip edin.</p>
    </div>

    <!-- Dosya Listesi -->
    <div class="card shadow rounded-4 border-0">
        <div class="card-header bg-gradient bg-primary text-white rounded-top-4 d-flex justify-content-between align-items-center">
            <h4 class="mb-0"><i class="fas fa-folder-open me-2"></i>Dosya Listesi</h4>
            <span class="badge bg-light text-dark px-3 py-2" id="fileCount">0 dosya</span>
        </div>
        <div class="card-body p-4">
            <div class="table-responsive">
                <table class="table table-hover align-middle" id="tbFileList">
                    <thead class="table-light text-center">
                        <tr>
                            <th>📄 Dosya Adı</th>
                            <th>📂 Kategori</th>
                            <th>📏 Boyut</th>
                            <th>👤 Yükleyen</th>
                            <th>🕒 Tarih</th>
                            <th>🔗 Durum</th>
                        </tr>
                    </thead>
                    <tbody class="text-center"></tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function(){
            console.log("Home page yüklendi, dosya listesi getiriliyor...");

            var apiBaseUrl="@ViewBag.ApiBaseURL";

            if(localStorage.getItem("token")=="" || localStorage.getItem("token")==null){
                location.href="/Login";
                return;
            }

            var token = localStorage.getItem("token");

            GetFileList();

            function getUserId() {
                try {
                    var base64Url = token.split('.')[1];
                    var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');
                    var jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {
                        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);
                    }).join(''));
                    var payload = JSON.parse(jsonPayload);
                    return payload["http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier"] ||
                           payload["sub"] || payload["nameid"];
                } catch(e) {
                    console.log("User ID decode hatası:", e);
                    return null;
                }
            }

            function GetFileList(){
                $.ajax({
                    url: apiBaseUrl + "/FileModal",
                    type: "GET",
                    headers: {
                        "Authorization": "Bearer " + token
                    },
                    success: function (d) {
                        FileToTable(d);
                    },
                    error: function (xhr, status, error) {
                        $("#tbFileList tbody").html('<tr><td colspan="6" class="text-danger text-center">Dosya listesi alınamadı: ' + error + '</td></tr>');
                        $("#fileCount").text("0 dosya");
                    }
                });
            }

            function FileToTable(data){
                if (!data || data.length === 0) {
                    $("#tbFileList tbody").html('<tr><td colspan="6" class="text-center text-muted">Henüz dosya yüklenmemiş</td></tr>');
                    $("#fileCount").text("0 dosya");
                    return;
                }

                $("#tbFileList tbody").empty();
                var currentUserId = getUserId();
                var row="";

                $.each(data, function(i, item){
                    var fileSize = formatFileSize(item.fileSize || 0);
                    var categoryName = item.category ? item.category.name : "Kategori Yok";
                    var isOwner = item.userId === currentUserId;
                    var isShared = item.userId !== currentUserId;

                    row += `<tr>
                        <td class="text-start">${isShared ? "<i class='fas fa-share-alt text-info me-2'></i>" : "<i class='fas fa-file text-secondary me-2'></i>"} ${item.fileName}${item.extension}</td>
                        <td><span class="badge bg-secondary">${categoryName}</span></td>
                        <td>${fileSize}</td>
                        <td>${item.uploadedBy}</td>
                        <td>${FormatDate(item.uploadOn)}</td>
                        <td>${isOwner ? '<span class="badge bg-success">Sahip</span>' : '<span class="badge bg-info">Paylaşılan</span>'}</td>
                    </tr>`;
                });

                $("#tbFileList tbody").append(row);
                $("#fileCount").text(data.length + " dosya");
            }

            function formatFileSize(bytes) {
                if (bytes === 0) return '0 Bytes';
                var k = 1024;
                var sizes = ['Bytes', 'KB', 'MB', 'GB'];
                var i = Math.floor(Math.log(bytes) / Math.log(k));
                return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
            }

            function FormatDate(dateString) {
                if (!dateString) return '';
                try {
                    var date = new Date(dateString);
                    return `${("0"+date.getDate()).slice(-2)}.${("0"+(date.getMonth()+1)).slice(-2)}.${date.getFullYear()} ${("0"+date.getHours()).slice(-2)}:${("0"+date.getMinutes()).slice(-2)}`;
                } catch(e) {
                    return dateString;
                }
            }
        });
    </script>
}
